<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.zippy.shop.mapper.ShopMapper">
	<!-- 전체조회 -->
	<select id="getProductList" resultType="ProductVO">
		SELECT *
		FROM shop_product
	</select>

	<!-- 카테고리 조회 -->
	<select id="getCategoryList" resultType="ProductVO"
		parameterType="ProductVO">
		SELECT s.*,
		b.comp_name FROM shop_product s
		JOIN business
		b
		ON s.email = b.email
		WHERE s.category = #{category}
		ORDER BY pro_no DESC
	</select>


	<!-- 키워드 조회 -->
	<select id="getKeywordList" resultType="ProductVO"
		parameterType="ProductVO">
		SELECT s.* ,
		b.comp_name
		FROM
		shop_product s
		JOIN
		business b
		ON s.email = b.email
		WHERE
		s.pro_name LIKE '%'||#{keyword}||'%'
		OR s.category LIKE '%'||#{keyword}||'%'
		OR s.email IN (SELECT email
		FROM
		business
		WHERE comp_name LIKE '%'||#{keyword}||'%'
		AND member_type=2)
		ORDER BY pro_no DESC
	</select>


	<!-- 단건조회(디테일) -->
	<select id="getProduct" resultType="ProductVO"
		parameterType="ProductVO">
		SELECT s.*, b.comp_name FROM shop_product s
		JOIN business
		b
		ON s.email = b.email
		WHERE s.pro_no =
		#{proNo}
	</select>
	<!-- 상세이미지 불러오기 -->
	<select id="getDetailImg" resultType="String"
		parameterType="ProductVO">
		SELECT pro_img
		FROM shop_product_img
		WHERE
		pro_no =
		#{proNo}
	</select>
	<!-- 상세옵션 불러오기 -->
	<select id="getDetailOpt" resultType="ProductOptionVO"
		parameterType="ProductOptionVO">
		SELECT
		opt_no,
		pro_no,
		opt_name,
		NVL(opt_price,0) opt_price
		FROM shop_product_option
		WHERE pro_no = #{proNo}
	</select>
	<!-- 찜 여부 조회 -->
	<select id="getHeart">
		SELECT service_id
		FROM bookmark
		WHERE email = #{email}
		AND service_id = #{service_id}
	</select>

	<!-- 장바구니 -->
	<!-- 장바구니 등록 -->
	<insert id="insertCart" parameterType="CartVO">
		INSERT INTO shop_cart
		VALUES(
		( SELECT NVL( MAX(cart_no) , 0) + 1 FROM shop_cart),
		#{email},
		#{cartPno},
		#{cartOptNo},
		#{cartQty})
	</insert>
	<!-- 내 장바구니 count -->
	<select id="getMyCart" resultType="Integer"
		parameterType="CartVO">
		SELECT NVL(count(*),0) countMycart
		FROM shop_cart
		WHERE
		email = #{email}
	</select>
	<!-- 장바구니에 등록된 내상품 전체조회 -->
	<select id="getMyCartList" resultType="CartVO"
		parameterType="CartVO">
		SELECT
		c.*,
		o.opt_no,
		o.pro_no,
		o.opt_name,
		NVL(opt_price,0)
		opt_price
		FROM shop_cart c
		LEFT OUTER JOIN shop_product_option o
		ON
		c.cart_opt_no = o.opt_no
		WHERE email = #{email}
		ORDER BY cart_no DESC
	</select>

	<!-- 장바구니 삭제 -->
	<delete id="deleteCart">
		DELETE
		shop_cart
		WHERE
		<foreach collection="selected" item="arr" separator="or">
			cart_no=
			#{arr.cartNo}
		</foreach>
	</delete>

	<!-- 주문 -->
	<!-- 장바구니에서 purchase으로 등록 -->
	<insert id="insertPur">
		<!-- <selectKey resultType="long" keyProperty="payCode" order="BEFORE"> 
			SELECT FLOOR(DBMS_RANDOM.VALUE(1000000000, 9999999999)) RANDOM FROM DUAL 
			</selectKey> -->
		INSERT INTO shop_purchase
		<foreach collection="selected" item="arr" index="index"
			separator="UNION ALL">
			SELECT
			(SELECT NVL( MAX(pur_no) , 0) + 1 FROM
			shop_purchase)+#{index},
			#{payCode},
			#{arr.cartPno},
			#{arr.cartOptNo,
			jdbcType=VARCHAR},
			#{arr.cartQty} ,
			#{arr.email},
			#{arr.cartPrice}
			FROM
			dual
		</foreach>
	</insert>
	<!-- 디테일에서 purchase로 등록 -->
	<insert id="insertPurOne">
		INSERT INTO shop_purchase
		VALUES(
		(SELECT NVL(
		MAX(pur_no) , 0) + 1 FROM shop_purchase),
		#{payCode},
		#{product.proNo},
		#{product.selectOptNo, jdbcType=VARCHAR},
		#{product.qty},
		#{email},
		#{product.purPrice}
		)
	</insert>
	<!-- 내 정보 조회 -->
	<select id="getMyInfo" resultType="GeneralUserVO">
		SELECT *
		FROM general_user
		WHERE email = #{email}
	</select>
	<!-- 주문한 상품 정보 조회 -->
	<select id="getMyPurList" resultType="PurchaseVO"
		parameterType="PurchaseVO">
		SELECT DISTINCT
		p.*,
		(SELECT o.opt_name
		FROM
		shop_product_option o
		WHERE o.opt_no IN (SELECT p.pur_no FROM
		shop_purchase p
		WHERE p.pay_code = #{payCode}) ) opt_name
		FROM
		shop_purchase p
		LEFT OUTER JOIN shop_product_option o
		ON p.pur_pno =
		o.pro_no
		WHERE p.pay_code = #{payCode}
		ORDER BY p.pur_no
	</select>
	<!-- 주문정보 등록 -->
	<insert id="insertOrder" parameterType="OrderVO">
		INSERT INTO shop_order
		VALUES(
		(SELECT NVL( MAX(order_no) , 0) + 1 FROM shop_order),
		#{email},
		#{payCode},
		#{payMethod},
		#{amount},
		#{buyerName},
		#{buyerTel},
		#{buyerAddr},
		#{buyerZipcode},
		#{orderMemo},
		0,
		systimestamp,
		systimestamp)
	</insert>

	<!-- 판매자 -->
	<!-- 상품등록 -->
	<insert id="insertProduct">
		INSERT ALL
		<!-- 상품정보 -->
		INTO shop_product(pro_no, email, pro_name, pro_price, category,
		pro_main_img, pro_info, delivery_cost, pro_status)
		VALUES (
		(SELECT NVL( MAX(pro_no) , 0) + 1 FROM shop_product),
		#{product.email},
		#{product.proName},
		#{product.proPrice},
		#{product.category},
		#{product.proMainImg},
		#{product.proInfo},
		#{product.deliveryCost},
		0 <!-- 0: 정상적 판매 상태 -->
		)
		<!-- 옵션정보 -->
		<if test="option != null">
		INTO shop_product_option(opt_no, pro_no, opt_name, opt_price)
		VALUES (
		(SELECT NVL( MAX(opt_no) , 0) + 1 FROM shop_product_option),
		(SELECT NVL( MAX(pro_no) , 0) + 1 FROM shop_product),
		#{option.optName},
		#{option.optPrice}
		)
		</if>
		SELECT *
		FROM dual
	</insert>
	<!-- 상세이미지 등록 -->
	<insert id="insertImg" parameterType="ProductImgVO">
		<selectKey keyProperty="imageNo" order="BEFORE"
			resultType="int">
			SELECT NVL(MAX(pro_img_no),0) +1
			FROM shop_product_img
		</selectKey>
		INSERT INTO shop_product_img
		(
		pro_img_no,
		pro_no,
		pro_img
		)
		VALUES
		(
		#{proImgNo}
		,#{proNo}
		,#{proImg}
		)
	</insert>
</mapper>